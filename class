```mermaid
classDiagram
    class App {
        +userId: string
        +appIsReady: boolean
        +prepare(): void
        +onLayoutRootView(): void
    }

    class AppFrame {
        -currentTime: Date
        -fadeAnim: Animated.Value
        +render(): JSX.Element
    }

    class DrawerNavigator {
        +render(): JSX.Element
    }

    class CreateEvent {
        -destination: string
        -arrivalDate: string
        -arrivalTime: Date
        -placeName: string
        -apiKey: string
        +fetchCurrentLocation(): void
        +createTrip(): void
        +setQuickDate(option: string): void
        +render(): JSX.Element
    }

    class useEnv {
        -value: string
        +useEnv(key: string): string
        +setEnv(key: string, value: string): Promise<void>
    }

    class User {
        -id: string
        -name: string
        +trips: Trip[]
        +notifications: Notification[]
    }

    class Trip {
        -id: number
        -user_id: string
        -origin: string
        -destination: string
        -arrival_datetime: Date
        -wake_up_time: Date
        -status: string
        -distance: float
        -eta: string
        +locations: Location[]
        +notifications: Notification[]
    }

    class Notification {
        -id: number
        -user_id: string
        -trip_id: number
        -message: string
        -scheduled_time: Date
        -status: string
    }

    class Location {
        -id: number
        -name: string
        -latitude: decimal
        -longitude: decimal
    }

    // Relationships
    User "1" -- "*" Trip : has many
    User "1" -- "*" Notification : has many
    Trip "1" -- "*" Notification : has many
    Trip "*" -- "*" Location : has many

    App --> AppFrame : contains
    App --> DrawerNavigator : contains
    DrawerNavigator --> CreateEvent : renders
    CreateEvent --> useEnv : uses
